<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/tx 
                    http://www.springframework.org/schema/tx/spring-tx.xsd
                    http://www.springframework.org/schema/aop 
                    http://www.springframework.org/schema/aop/spring-aop.xsd
                    http://www.springframework.org/schema/context      
                    http://www.springframework.org/schema/context/spring-context.xsd
                    http://www.springframework.org/schema/cache 
                    http://www.springframework.org/schema/cache/spring-cache.xsd
                    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd 
                    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd" 
                    default-lazy-init="true">  
	<!-- 启动组件扫描 -->                   
	<context:component-scan base-package="com.guotv.chen.testserver"></context:component-scan>
	<!-- 属性文件位置 -->
	<context:property-placeholder location="classpath:resource.properties"/>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	    <!-- 基本属性配置 -->
	    <property name="driverClassName" value="${jdbc.driverClassName}" />
	    <property name="url" value="${jdbc.url}" />  
    	<property name="username" value="${jdbc.username}" />  
    	<property name="password" value="${jdbc.password}" />  
    	<!-- 配置初始化大小、最小、最大 -->
    	<property name="initialSize" value="1" /> 
  		<property name="minIdle" value="1" /> 
  		<property name="maxActive" value="10" />
  		<!-- 配置获取连接等待超时的时间 --> 
  		<property name="maxWait" value="10000" />
  		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --> 
  		<property name="timeBetweenEvictionRunsMillis" value="60000" />
  		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --> 
  		<property name="minEvictableIdleTimeMillis" value="300000" />
  		<property name="testWhileIdle" value="true" />
  		<!-- 这里建议配置为TRUE，防止取到的连接不可用 --> 
  		<property name="testOnBorrow" value="true" /> 
  		<property name="testOnReturn" value="false" />
  		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 --> 
  		<property name="poolPreparedStatements" value="true" /> 
  		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
  		<!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
  		<property name="defaultAutoCommit" value="true" />
  		<!-- 验证连接有效与否的SQL，不同的数据配置不同 --> 
  		<property name="validationQuery" value="select 1 " /> 
  		<property name="filters" value="stat" /> 
  		<property name="proxyFilters"> 
   			<list> 
    			<ref bean="logFilter" /> 
   			</list> 
  		</property>
	</bean>
	<bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter"> 
  		<property name="statementExecutableSqlLogEnable" value="false" /> 
 	</bean>
	<!-- 设置jpa实现厂商的特定属性 -->
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">  
        <property name="databasePlatform" value="${hibernate.dialect}" />  
    </bean> 
    <!-- JPA实体管理器工厂 -->
    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
        <!-- 加入定制化包路径 -->
        <property name="packagesToScan" value="com.guotv.chen.testserver.entity" />
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop><!-- validate/update/create -->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <!-- 建表的命名规则 -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
            </props>
        </property>
    </bean>
    <!-- jpa事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">  
        <property name="entityManagerFactory" ref="entityManagerFactory"/>  
    </bean> 
    <!-- 重要配置：启用扫描并自动创建代理的功能  -->
    <jpa:repositories base-package="com.guotv.chen.testserver"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
    <!-- 开启注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    
	
</beans>
